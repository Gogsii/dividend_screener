{"version":3,"sources":["constants/actionTypes.js","reducers/posts.js","reducers/stock.js","reducers/auth.js","reducers/index.js","components/Navbar/styles.js","components/Navbar/Navbar.js","api/index.js","actions/posts.js","components/Posts/Post/styles.js","components/Posts/styles.js","components/Stocks/Stock/styles.js","components/Form/styles.js","components/Pagination/styles.js","components/Stocks/Stock/Stock.js","components/Stocks/Stock/StockSearch.js","actions/stocks.js","components/Stocks/styles.js","components/Stocks/Stocks.js","components/Home/styles.js","components/Home/Home.js","components/Auth/styles.js","components/Auth/Input.js","components/Auth/icon.js","components/Auth/Auth.js","actions/auth.js","components/PostDetails/styles.js","components/PostDetails/CommentSection.jsx","components/PostDetails/PostDetails.jsx","App.js","index.js"],"names":["CREATE","UPDATE","DELETE","FETCH_STOCK_BY_SEARCH","FETCH_POST","FETCH_ALL","FETCH_BY_SEARCH","LIKE","COMMENT","START_LOADING","END_LOADING","AUTH","LOGOUT","posts","state","isLoading","action","type","payload","data","currentPage","numberOfPages","post","map","_id","filter","stocks","authReducer","authData","localStorage","setItem","JSON","stringify","clear","combineReducers","auth","makeStyles","theme","appBar","borderRadius","margin","display","flexDirection","justifyContent","alignItems","padding","backgroundColor","breakpoints","down","heading","color","textDecoration","fontSize","fontWeight","brandContainer","image","marginLeft","marginTop","toolbar","width","profile","logout","userName","textAlign","purple","palette","getContrastText","deepPurple","Navbar","classes","useStyles","dispatch","useDispatch","history","useHistory","location","useLocation","useState","parse","getItem","user","setUser","useEffect","token","decode","exp","Date","getTime","AppBar","className","position","to","Typography","component","Link","variant","align","Toolbar","Avatar","alt","result","name","src","imageUrl","charAt","Button","onClick","actionType","push","API","axios","create","baseURL","interceptors","request","use","req","headers","authorization","fetchPost","id","get","fetchPostsBySearch","searchQuery","search","tags","comment","value","signIn","formData","signUp","getPostsBySearch","a","api","console","log","message","commentPost","comments","media","height","paddingTop","backgroundBlendMode","border","fullHeightCard","card","overlay","top","left","overlay2","right","grid","details","title","cardActions","cardAction","mainContainer","smMargin","spacing","root","paper","form","flexWrap","fileInput","buttonSubmit","marginBottom","ul","halfCentered","appBarSearch","Stock","stockInfo","Grow","in","Card","CardContent","style","symbol","trailingAnnualDividendRate","shortName","marketCap","toLocaleString","regularMarketPrice","dividendDate","date","trailingAnnualDividendYield","toFixed","trailingPE","StockSearch","URLSearchParams","setSearch","searchStock","trim","toUpperCase","ticker","method","url","params","then","response","catch","error","getStockBySearch","TextField","label","onKeyDown","e","keyCode","onChange","target","toLocaleUpperCase","searchButton","Stocks","useSelector","Container","maxWidth","Grid","container","CircularProgress","length","pagination","gridContainer","Home","query","justify","item","xs","sm","md","avatar","secondary","main","submit","googleButton","Input","handleChange","half","autoFocus","handleShowPassword","required","fullWidth","InputProps","endAdornment","InputAdornment","IconButton","icon","viewBox","fill","d","initialState","firstName","lastName","email","password","confirmPassword","Auth","showPassword","setShowPassword","isSignup","setIsSignup","setFormData","googleSuccess","res","profileObj","tokenId","Paper","elevation","onSubmit","preventDefault","router","signup","signin","prevShowPassword","clientId","render","renderProps","disabled","startIcon","onSuccess","onFailure","cookiePolicy","prevIsSignup","objectFit","maxHeight","section","flex","imageSection","recommendedPosts","loadingPaper","commentsOuterContainer","commentsInnerContainer","overflowY","marginRight","CommentSection","setComments","setComment","commentsRef","useRef","handleComment","finalComment","newComments","current","scrollIntoView","behavior","gutterBottom","index","split","ref","rows","multiline","Post","useParams","getPost","join","size","tag","moment","createdAt","fromNow","Divider","selectedFile","likes","cursor","openPost","App","path","exact","PostDetails","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0da7550b.chunk.js","sourcesContent":["export const CREATE = 'CREATE';\r\nexport const UPDATE = 'UPDATE';\r\nexport const DELETE = 'DELETE';\r\n\r\nexport const FETCH_STOCK_BY_SEARCH = 'FETCH_STOCK_BY_SEARCH';\r\n\r\nexport const FETCH_POST = 'FETCH_POST';\r\nexport const FETCH_ALL = 'FETCH_ALL';\r\nexport const FETCH_BY_SEARCH = 'FETCH_BY_SEARCH';\r\n\r\nexport const LIKE = 'LIKE';\r\nexport const COMMENT = 'COMMENT';\r\nexport const START_LOADING = 'START_LOADING';\r\nexport const END_LOADING =  'END_LOADING';\r\n\r\nexport const AUTH = 'AUTH';\r\nexport const LOGOUT = 'LOGOUT';","/*a reducer is a function that accepts the state and the action\r\n//based on the action type it does some logic\r\n//in reducers the state always must be initialized to something\r\n*/\r\n\r\nimport { FETCH_POST, FETCH_ALL, FETCH_BY_SEARCH, START_LOADING, END_LOADING, CREATE, UPDATE, DELETE, LIKE, COMMENT } from '../constants/actionTypes';\r\n\r\nconst posts = (state = { isLoading: true, posts: [] }, action) => {\r\n    switch(action.type) {\r\n        case START_LOADING:\r\n            return { ...state, isLoading: true };\r\n            case END_LOADING:\r\n            return { ...state, isLoading: false };\r\n        case FETCH_ALL:\r\n            return {\r\n                ...state, //always spread the state when working with objects\r\n                posts: action.payload.data,\r\n                currentPage: action.payload.currentPage,\r\n                numberOfPages: action.payload.numberOfPages,\r\n            };\r\n        case FETCH_POST:\r\n            return { ...state, post: action.payload };\r\n        case FETCH_BY_SEARCH:\r\n            return { ...state, posts: action.payload };\r\n        case LIKE:\r\n            return { ...state, posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post)) };\r\n        case COMMENT:\r\n            return { ...state, posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post)) };\r\n        case CREATE:\r\n            return { ...state, posts: [...state.posts, action.payload] };\r\n        case UPDATE:\r\n            return { ...state, posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post)) };\r\n        case DELETE:\r\n            return { ...state, posts: state.posts.filter((post) => post._id !== action.payload) };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default posts;","import { FETCH_STOCK_BY_SEARCH, START_LOADING, END_LOADING } from '../constants/actionTypes';\r\n\r\nconst stocks = (state = { stocks: [] }, action) => {\r\n  switch(action.type) {\r\n    case START_LOADING:\r\n      return { ...state, isLoading: true };\r\n    case END_LOADING:\r\n      return { ...state, isLoading: false };\r\n    case FETCH_STOCK_BY_SEARCH:\r\n        return { ...state, stocks: action.payload };\r\n    default:\r\n        return state;\r\n  }\r\n};\r\n\r\nexport default stocks;","import { AUTH, LOGOUT } from '../constants/actionTypes';\r\n\r\nconst authReducer = (state = { authData: null }, action) => {\r\n    switch (action.type) {\r\n        case AUTH: \r\n            localStorage.setItem('profile', JSON.stringify( {...action?.data } )); //saving user credentials to local storage\r\n            return { ...state, authData: action?.data };\r\n        case LOGOUT:\r\n            localStorage.clear();\r\n            return { ...state, authData: null };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;","import { combineReducers } from \"redux\";\r\nimport posts from './posts';\r\nimport stocks from './stock';\r\nimport auth from \"./auth\";\r\n\r\n\r\nexport default combineReducers({ stocks, posts, auth });","import { makeStyles } from '@material-ui/core/styles';\r\nimport { deepPurple } from '@material-ui/core/colors';\r\n\r\nexport default makeStyles((theme) => ({\r\n  appBar: {\r\n    borderRadius: 4,\r\n    margin: '30px 0',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: '10px 30px',\r\n    backgroundColor: '#648caf',\r\n    [theme.breakpoints.down('sm')]: {\r\n      flexDirection: 'column',\r\n    },\r\n  },\r\n  heading: {\r\n    // color: theme.palette.primary.main,\r\n    color: 'white',\r\n    textDecoration: 'none',\r\n    fontSize: '2em',\r\n    fontWeight: 800,\r\n  },\r\n  brandContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    textDecoration: 'none',\r\n  },\r\n  image: {\r\n    marginLeft: '10px',\r\n    marginTop: '5px',\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    width: '400px',\r\n    [theme.breakpoints.down('sm')]: {\r\n      width: 'auto',\r\n    },\r\n  },\r\n  profile: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    width: '400px',\r\n    alignItems: 'center',\r\n    [theme.breakpoints.down('sm')]: {\r\n      width: 'auto',\r\n      marginTop: 20,\r\n      justifyContent: 'center',\r\n    },\r\n  },\r\n  logout: {\r\n    marginLeft: '20px',\r\n  },\r\n  userName: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    textAlign: 'center',\r\n  },\r\n  purple: {\r\n    color: theme.palette.getContrastText(deepPurple[500]),\r\n    backgroundColor: deepPurple[500],\r\n  },\r\n}));","import React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { AppBar, Container, Avatar, Button, Toolbar, Typography } from '@material-ui/core';\r\nimport { useDispatch } from 'react-redux';\r\nimport decode from 'jwt-decode';\r\n\r\n//import dividends_logo from '../../images/dividends_logo.jpg';\r\n//import dividends_text from '../../images/dividends_text.jpg';\r\n\r\n//import authReducer from '../../reducers/auth';\r\nimport * as actionType from '../../constants/actionTypes';\r\nimport useStyles from './styles';\r\n\r\nconst Navbar = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile'))); //here we attempt to fetch the user from local storage and set it as the current state\r\n    \r\n    const logout = () => {\r\n        dispatch({ type: actionType.LOGOUT });\r\n        setUser(null);\r\n\r\n        return history.push('/auth');\r\n    };\r\n\r\n    //using useEffect to help navigate automatically instead of manually\r\n    useEffect((logout, user) => {\r\n        const token = user?.token;\r\n        \r\n        if (token) {\r\n            const decodedToken = decode(token);\r\n        \r\n            if (decodedToken.exp * 1000 < new Date().getTime()) logout();\r\n          }\r\n        \r\n        setUser(JSON.parse(localStorage.getItem('profile')));\r\n    }, [location]); //location here refers to url changing from /auth to just '/'\r\n\r\n    return(\r\n        <AppBar className={ classes.appBar } position='static' color='inherit'>\r\n            <Link to='/' className={classes.brandContainer}>\r\n                <Typography component={Link} to='/' className={ classes.heading } variant='h2' align='center'>Dividend Stock Screener</Typography>\r\n            {/* <img src={ dividends_text } alt='icon' height='45px' /> */}\r\n            {/* <img className={ classes.image } src={ dividends_logo } alt='icon' height='40px' /> */}\r\n            </Link>\r\n            <Toolbar className={classes.toolbar}>\r\n                {user ? (\r\n                    <div className={classes.profile}>\r\n                        <Avatar className={classes.purple} alt={user.result.name} src={user.result.imageUrl}>{user.result.name.charAt(0)}</Avatar>\r\n                        <Typography className={classes.userName} variant='h6'>{user.result.name}</Typography>\r\n                        <Button variant='contained' className={classes.logout} onClick={logout}>Logout</Button>\r\n                    </div>\r\n                ) : (\r\n                    <Button component={Link} to='/auth' variant='contained' color='primary'>Log In</Button>\r\n                )}\r\n            </Toolbar>\r\n\r\n        </AppBar>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","import axios from 'axios';\r\n\r\nconst API = axios.create({ baseURL: 'https://dividend-screener.herokuapp.com' });\r\n\r\n//adding something specific to each one of our requests, sending the token to the backend middleware for authentication\r\n//with this our backend can get access to the specific header and decode the data, we're sending the token to the backend to verify that we are actually logged in\r\nAPI.interceptors.request.use((req) => {\r\n    if(localStorage.getItem('profile')) { //this is where the token is stored, in the profile\r\n        req.headers.authorization = `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`;\r\n    }\r\n    return req; //must return the initial request so that we are able to return all the subsequent requests below\r\n});\r\n\r\n//const url = 'http://localhost:3001/posts'; //this is when testing on home comp\r\n//const url = 'https://dividend-screener.herokuapp.com/posts';\r\n\r\n//very important to remember to export these\r\n//this is the point at which we communicate with the backend\r\nexport const fetchPost = (id) => API.get(`/posts/${id}`);\r\nexport const fetchPosts = (page) => API.get(`/posts?page=${page}`); //passing the data to the backend just so we know which page we're currently on\r\nexport const fetchPostsBySearch = (searchQuery) => API.get(`/posts/search?searchQuery=${searchQuery.search || 'none' }&tags=${searchQuery.tags}`); //with this, we are sending all of the search info to the search endpoint\r\nexport const createPost = (newPost) => API.post('/posts', newPost); \r\nexport const likePost = (id) => API.patch(`/posts/${id}/likePost`); //to implement abiilty to like post only once we need to implement accounts (full auth system registration login, accounts etc)\r\nexport const updatePost = (id, updatedPost) => API.patch(`/posts/${id}`, updatedPost); //we now have the defined url, but also passing in the id to update\r\nexport const deletePost = (id) => API.delete(`/posts/${id}`); //we now have the defined url, but also passing in the id to update\r\nexport const comment = (value, id) => API.post(`/posts/${id}/commentPost`, { value });\r\n\r\nexport const signIn = (formData) => API.post('/user/signin', formData);\r\nexport const signUp = (formData) => API.post('/user/signup', formData);\r\n\r\n/* SECOND API FOR PULLING IN EXTERNAL API STOCK DATA */\r\n\r\n// const APIv2 = axios.create({\r\n//     // method: 'GET',\r\n//     url: 'https://mboum-finance.p.rapidapi.com/qu/quote', \r\n//     params: {symbol: ''},\r\n//     headers: {\r\n//         'x-rapidapi-host': 'mboum-finance.p.rapidapi.com',\r\n//         'x-rapidapi-key': 'cbe0339db0msh2daae506a51a3a4p1940e3jsn1ebae4488c25'\r\n//     }\r\n// });\r\n\r\n// export const fetchStockBySearch = (searchQuery) => APIv2.get({params: {symbol: searchQuery.search}}); //with this, we are sending all of the search info to the search endpoint\r\n\r\n\r\n","// these are the actions dispatched in App.js with\r\n// useEffect( () => { dispatch() }, [dispatch] );\r\n// by themselves they don't do much, you have to go into the reducers and add the logic for them\r\n\r\nimport { FETCH_POST, FETCH_ALL, FETCH_BY_SEARCH, START_LOADING, END_LOADING, CREATE, UPDATE, DELETE, LIKE, COMMENT } from '../constants/actionTypes';\r\nimport * as api from '../api'; //import everything from the actions as api\r\n\r\n/*--------------------------------------------------------------------------------------------------------*/\r\n/*--------------------------------------------------------------------------------------------------------*/\r\n//GET SINGLE POST ACTION\r\n\r\nexport const getPost = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: START_LOADING });\r\n        const { data } = await api.fetchPost(id); //this is where we're receiving the data from the backend\r\n            \r\n        dispatch({ type: FETCH_POST, payload: data }); //this is where we're sending the payload to the reducers\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n};\r\n\r\n\r\n/*--------------------------------------------------------------------------------------------------------*/\r\n/*--------------------------------------------------------------------------------------------------------*/\r\n//GET ALL POSTS ACTION \r\n\r\nexport const getPosts = (page) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: START_LOADING });\r\n        const { data: { data, currentPage, numberOfPages } } = await api.fetchPosts(page);\r\n        \r\n        dispatch({ type: FETCH_ALL, payload: { data, currentPage, numberOfPages } });\r\n        dispatch({ type: END_LOADING });\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n};\r\n\r\n/*--------------------------------------------------------------------------------------------------------*/\r\n/*--------------------------------------------------------------------------------------------------------*/\r\n//GET POST BY SEARCHING\r\n\r\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: START_LOADING });\r\n\r\n        //have to destructure the data twice\r\n        const { data: { data } } = await api.fetchPostsBySearch(searchQuery); // first time because we're making an axios request, and the second because we put it in a new object that has the data property\r\n\r\n        dispatch({ type: FETCH_BY_SEARCH, payload: data });\r\n        dispatch({ type: END_LOADING });\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n};\r\n\r\n/*--------------------------------------------------------------------------------------------------------*/\r\n/*--------------------------------------------------------------------------------------------------------*/\r\n//CREATE POST ACTION\r\n\r\nexport const createPost = (post, history) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: START_LOADING });\r\n        const { data } = await api.createPost(post);\r\n        \r\n        dispatch({ type: CREATE, payload: data });\r\n\r\n        history.push(`/posts/${data._id}`);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\n/*--------------------------------------------------------------------------------------------------------*/\r\n/*--------------------------------------------------------------------------------------------------------*/\r\n//UPDATE POST ACTION\r\n\r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.updatePost(id, post); //this is returning the updated post as a response, we then destructure the response and get the data\r\n        dispatch({ type: UPDATE, payload: data });\r\n    } catch (error) {\r\n        console.log(error.message); //console logging just the error instead of error.message will give you more info\r\n    }\r\n};\r\n\r\n/*--------------------------------------------------------------------------------------------------------*/\r\n/*--------------------------------------------------------------------------------------------------------*/\r\n//DELETE POST ACTION\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n    try {\r\n        await api.deletePost(id); //no destructuring data since we're not interested in the returned data, we're just deleting the post when recieved\r\n        dispatch({ type: DELETE, payload: id });\r\n    } catch (error) {\r\n        console.log(error); //console logging just the error instead of error.message will give you more info\r\n    }\r\n};\r\n\r\n/*--------------------------------------------------------------------------------------------------------*/\r\n/*--------------------------------------------------------------------------------------------------------*/\r\n//LIKE POST ACTION\r\n//to implement abiilty to like post only once we need to implement accounts (full auth system registration login, accounts etc)\r\n\r\nexport const likePost = (id) => async (dispatch) => {\r\n    const user = JSON.parse(localStorage.getItem('profile'));\r\n\r\n    try {\r\n        const { data } = await api.likePost(id, user?.token); //\r\n        dispatch({ type: LIKE, payload: data });\r\n    } catch (error) {\r\n        console.log(error.message); //console logging just the error instead of error.message will give you more info\r\n    }\r\n};\r\n\r\n/*--------------------------------------------------------------------------------------------------------*/\r\n/*--------------------------------------------------------------------------------------------------------*/\r\n//COMMENT ON POST ACTION\r\n\r\nexport const commentPost = (value, id) => async(dispatch) => {\r\n    try {\r\n        const { data } = await api.comment(value, id);\r\n\r\n        dispatch({ type: COMMENT, payload: data })\r\n\r\n        return data.comments;\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    backgroundBlendMode: 'darken',\r\n  },\r\n  border: {\r\n    border: 'solid',\r\n  },\r\n  fullHeightCard: {\r\n    height: '100%',\r\n  },\r\n  card: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n    borderRadius: '15px',\r\n    position: 'relative',\r\n  },\r\n  overlay: {\r\n    position: 'absolute',\r\n    top: '20px',\r\n    left: '20px',\r\n    color: 'white',\r\n  },\r\n  overlay2: {\r\n    position: 'absolute',\r\n    top: '20px',\r\n    right: '20px',\r\n    color: 'white',\r\n  },\r\n  grid: {\r\n    display: 'flex',\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    margin: '20px',\r\n  },\r\n  title: {\r\n    padding: '0 16px',\r\n  },\r\n  cardActions: {\r\n    padding: '0 16px 8px 16px',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  cardAction: {\r\n    display: 'block',\r\n    textAlign: 'initial',\r\n  },\r\n});","import { makeStyles } from '@material-ui/core/styles';\r\nimport { deepPurple } from '@material-ui/core/colors';\r\n\r\nexport default makeStyles((theme) => ({\r\n  mainContainer: {\r\n    borderRadius: 15,\r\n    margin: '30px 0',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: '10px 50px',\r\n  },\r\n  heading: {\r\n    color: 'rgba(0,183,255, 1)',\r\n    textDecoration: 'none',\r\n  },\r\n  image: {\r\n    marginLeft: '15px',\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    width: '400px',\r\n  },\r\n  profile: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    width: '400px',\r\n  },\r\n  userName: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  brandContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  smMargin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  purple: {\r\n    color: theme.palette.getContrastText(deepPurple[500]),\r\n    backgroundColor: deepPurple[500],\r\n  },\r\n  [theme.breakpoints.down('sm')]: {\r\n    appBar: {\r\n      padding: '10px 20px',\r\n    },\r\n    heading: {\r\n      display: 'none',\r\n    },\r\n    userName: {\r\n      display: 'none',\r\n    },\r\n    image: {\r\n      marginLeft: '5px',\r\n    },\r\n    toolbar: {\r\n      display: 'flex',\r\n      justifyContent: 'flex-end',\r\n      width: '160px',\r\n    },\r\n  },\r\n\r\n  actionDiv: {\r\n    textAlign: 'center',\r\n  },\r\n}));","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    backgroundBlendMode: 'darken',\r\n  },\r\n  border: {\r\n    border: 'solid',\r\n  },\r\n  fullHeightCard: {\r\n    height: '100%',\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    margin: '1rem 0',\r\n\r\n  },\r\n  halfCentered: {\r\n    width: '50%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n    borderRadius: '15px',\r\n    position: 'relative',\r\n    marginBottom: '30px',\r\n  },\r\n  card: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n    borderRadius: '15px',\r\n    position: 'relative',\r\n    marginBottom: '30px',\r\n  },\r\n  overlay: {\r\n    position: 'absolute',\r\n    top: '20px',\r\n    left: '20px',\r\n    color: 'white',\r\n  },\r\n  overlay2: {\r\n    position: 'absolute',\r\n    top: '20px',\r\n    right: '20px',\r\n    color: 'white',\r\n  },\r\n  grid: {\r\n    display: 'flex',\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    margin: '20px',\r\n  },\r\n  title: {\r\n    padding: '0 16px',\r\n  },\r\n  cardActions: {\r\n    padding: '0 16px 8px 16px',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  cardAction: {\r\n    display: 'block',\r\n    textAlign: 'initial',\r\n  },\r\n  appBarSearch: {\r\n    borderRadius: 4,\r\n    marginBottom: '1rem',\r\n    display: 'flex',\r\n    padding: '16px',\r\n  },\r\n});","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n  },\r\n  fileInput: {\r\n    width: '97%',\r\n    margin: '10px 0',\r\n  },\r\n  buttonSubmit: {\r\n    marginBottom: 10,\r\n  },\r\n}));","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles(() => ({\r\n    ul: {\r\n        justifyContent: 'space-around',\r\n    },\r\n}));","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// import { useHistory, useLocation } from 'react-router-dom';\r\n\r\nimport {Card, CardContent, CardMedia, Grow, Typography, TextField } from '@material-ui/core/';\r\n// import ChipInput from 'material-ui-chip-input'; //makes our tags pretty, especially when searching for multiple items\r\nimport useStyles from './styles';\r\n\r\n\r\nconst Stock = ({stockInfo}) => {\r\n    const classes = useStyles();\r\n    {/* const apiDate = new Date(stockInfo.dividendDate.date); */}\r\n\r\n\r\n    return (\r\n        <Grow in>\r\n            <Card className={classes.fullHeightCard}>\r\n                    {/*I MAY WANT TO PUT AN IMAGE IN HERE*/}\r\n                <CardContent>\r\n                    <Typography variant='h4' style={{color: 'black'}}>Your Results for {stockInfo.symbol}:</Typography>\r\n                    {stockInfo.trailingAnnualDividendRate === null || stockInfo.trailingAnnualDividendRate === 0\r\n                        ? <Typography>This stock doesn't pay a dividend.</Typography> \r\n                        :\r\n                        <> \r\n                            <Typography style={{color: 'black'}}>Company Name: {stockInfo.shortName}</Typography>\r\n                            <Typography style={{color: 'black'}}>Market Cap: ${stockInfo.marketCap.toLocaleString()}</Typography>\r\n                            <Typography style={{color: 'black'}}>Current price: ${stockInfo.regularMarketPrice}</Typography>\r\n                            <Typography style={{color: 'black'}}>Most Recent Dividend Date: {stockInfo.dividendDate.date}</Typography>\r\n                            <Typography style={{color: 'black'}}>Trailing Annual Dividend Rate: {stockInfo.trailingAnnualDividendRate}%</Typography>\r\n                            <Typography style={{color: 'black'}}>Trailing Annual Dividend Yield: {(stockInfo.trailingAnnualDividendYield * 100).toFixed(2)}%</Typography>\r\n                            <Typography style={{color: 'black'}}>Trailing P/E Ratio: {stockInfo.trailingPE.toFixed(2)}</Typography>\r\n                        </>\r\n                    }\r\n                </CardContent>\r\n            </Card>\r\n        </Grow>\r\n    )\r\n}\r\n\r\nexport default Stock;","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { getStockBySearch } from '../../../actions/stocks';\r\n\r\nimport useStyles from './styles';\r\nimport { AppBar, Button, Grow, TextField } from '@material-ui/core/';\r\n// import ChipInput from 'material-ui-chip-input'; //makes our tags pretty, especially when searching for multiple items\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nconst StockSearch = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const query = useQuery();\r\n  const searchQuery = query.get('searchQuery'); //DELETE this later if don't need it\r\n   \r\n  const [search, setSearch] = useState(''); //setting an empty string as the default value for the search bar\r\n\r\n  //runs function for searching stocks by ticker and name upon pressing of Enter key\r\n  const handleKeyPress = (e) => {\r\n      if(e.keyCode === 13) { //key code 13 means the Enter key on a keyboard\r\n          //search for post\r\n          searchStock();\r\n      }\r\n  }\r\n\r\n  //function for searching stocks by ticker and name\r\n  const searchStock = () => {\r\n      if (search.trim()) {\r\n          search.toUpperCase();\r\n\r\n          dispatch(getStockBySearch({ search }));\r\n\r\n          history.push(`/stock/search?searchQuery=${search || 'none'}`); //changes the permalink\r\n          \r\n      } else {\r\n          history.push('/stock/search'); //redirects to base, nothing was searched\r\n      }\r\n  };\r\n  return (\r\n    <Grow in>\r\n      <AppBar className={classes.appBarSearch} position='static' color='inherit' > \r\n        {/* <TextField \r\n            name='search' \r\n            variant='outlined' \r\n            label='Search for a stock'\r\n            onKeyDown={handleKeyPress}\r\n            fullWidth\r\n            value={search}\r\n            // onChange={ (e) => setSearch(e.target.value) } //allows user to change value of the search\r\n            /> */}\r\n        <TextField\r\n            // value={tags} <-- MAY NEED THIS FOR LATER\r\n            // onAdd={handleAddTag}\r\n            // onDelete={handleDeleteTag}\r\n            name='search' \r\n            value={search}\r\n            style={{margin: '15px 0'}}\r\n            label= 'Search stock tickers'\r\n            variant='outlined'\r\n            onKeyDown={handleKeyPress}\r\n            onChange={ (e) => setSearch(e.target.value.toLocaleUpperCase()) } //allows user to change value of the search\r\n        />\r\n        <Button className={classes.searchButton} onClick={searchStock} variant='contained' color='primary'>Search</Button>\r\n    </AppBar>\r\n    </Grow>\r\n  )\r\n}\r\n\r\nexport default StockSearch;\r\n","import { FETCH_STOCK_BY_SEARCH, START_LOADING, END_LOADING } from '../constants/actionTypes';\r\nimport axios from 'axios';\r\nimport dotenv from 'dotenv'\r\n\r\n/*--------------------------------------------------------------------------------------------------------*/\r\n/*--------------------------------------------------------------------------------------------------------*/\r\n//GET SINGLE STOCK BY SEARCHING ACTION\r\n\r\nexport const getStockBySearch = (searchQuery) => async (dispatch) => { //the searchQuery is the stock ticker the user typed into the search bar\r\n    dispatch({ type: START_LOADING });\r\n\r\n    //API call info\r\n    const ticker = {\r\n        method: 'GET',\r\n        url: 'https://mboum-finance.p.rapidapi.com/qu/quote',\r\n        params: {symbol: searchQuery.search}, //assigning the symbol to be the searchQuery the user typed into the searchbar\r\n        headers: {\r\n          'x-rapidapi-host': 'mboum-finance.p.rapidapi.com',\r\n          'x-rapidapi-key': 'cbe0339db0msh2daae506a51a3a4p1940e3jsn1ebae4488c25'\r\n        }\r\n      };\r\n\r\n    //SENDING an API call to Mboum Finance for the data\r\n    await axios.request(ticker).then(function(response) {\r\n      const stockInfo = response.data[0]; //assigning the 1st object of the response array to be the stockInfo\r\n\r\n      dispatch({ type: FETCH_STOCK_BY_SEARCH, payload: stockInfo }); //sending the retrieved stockInfo to state\r\n\r\n    }).catch(function (error) {\r\n          console.error(error);\r\n      });\r\n\r\n    dispatch({ type: END_LOADING });\r\n};\r\n\r\n/*--------------------------------------------------------------------------------------------------------*/\r\n/*--------------------------------------------------------------------------------------------------------*/","import { makeStyles } from '@material-ui/core/styles';\r\nimport { deepPurple } from '@material-ui/core/colors';\r\n\r\nexport default makeStyles((theme) => ({\r\n  mainContainer: {\r\n    borderRadius: 15,\r\n    margin: '30px 0',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: '10px 50px',\r\n  },\r\n  heading: {\r\n    color: 'rgba(0,183,255, 1)',\r\n    textDecoration: 'none',\r\n  },\r\n  image: {\r\n    marginLeft: '15px',\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    width: '400px',\r\n  },\r\n  profile: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    width: '400px',\r\n  },\r\n  userName: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  brandContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  smMargin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  purple: {\r\n    color: theme.palette.getContrastText(deepPurple[500]),\r\n    backgroundColor: deepPurple[500],\r\n  },\r\n  [theme.breakpoints.down('sm')]: {\r\n    appBar: {\r\n      padding: '10px 20px',\r\n    },\r\n    heading: {\r\n      display: 'none',\r\n    },\r\n    userName: {\r\n      display: 'none',\r\n    },\r\n    image: {\r\n      marginLeft: '5px',\r\n    },\r\n    toolbar: {\r\n      display: 'flex',\r\n      justifyContent: 'flex-end',\r\n      width: '160px',\r\n    },\r\n  },\r\n\r\n  actionDiv: {\r\n    textAlign: 'center',\r\n  },\r\n}));","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux'; //lets us tap into the store\r\nimport Stock from './Stock/Stock';\r\nimport StockSearch from './Stock/StockSearch';\r\n\r\nimport { Grid, Container, CircularProgress } from '@material-ui/core';\r\nimport useStyles from './styles';\r\n\r\nconst Stocks = () => {\r\n  const { stocks, isLoading } = useSelector((state) => state.stocks); //initialized as a hook\r\n\r\n  const classes = useStyles();\r\n\r\n  console.log(isLoading); // <-- for testing DELETE later on\r\n\r\n  // if (!isLoading) return ''; //Maybe I can put in a news feed by default in here DELETE later if not needed\r\n\r\n  return (\r\n    <Container maxWidth='xl'>\r\n        <Grid className={ classes.container } container alignItems=\"stretch\">\r\n          \r\n          { isLoading ? <CircularProgress /> : (stocks.length === 0 ?\r\n          <StockSearch />\r\n          :\r\n          <>\r\n          <Stock stockInfo={stocks} />\r\n          <StockSearch />\r\n          </>\r\n          )}\r\n        </Grid>\r\n    </Container>\r\n    )\r\n}\r\n\r\nexport default Stocks\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  appBarSearch: {\r\n    borderRadius: 4,\r\n    marginBottom: '1rem',\r\n    display: 'flex',\r\n    padding: '16px',\r\n  },\r\n  pagination: {\r\n    borderRadius: 4,\r\n    marginTop: '1rem',\r\n    padding: '16px',\r\n  },\r\n  \r\n  gridContainer: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      flexDirection: 'column-reverse',\r\n    },\r\n  },\r\n}));\r\n","import React, { useState } from 'react';\r\nimport { Container, Grow, Grid, Paper, AppBar, TextField, Button } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getPostsBySearch } from '../../actions/posts';\r\nimport { useHistory, useLocation } from 'react-router-dom'; //location is to know which page we are on currently and history is for re-navigation\r\nimport ChipInput from 'material-ui-chip-input'; //makes our tags pretty, especially when searching for multiple items\r\n\r\nimport Posts from '../Posts/Posts';\r\nimport Form from '../Form/Form';\r\nimport Pagination from '../Pagination/Pagination';\r\nimport Stocks from '../Stocks/Stocks';\r\nimport Stock from '../Stocks/Stock/Stock';\r\n\r\nimport useStyles from './styles';\r\nimport StockSearch from '../Stocks/Stock/StockSearch';\r\n\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nconst Home = () => {\r\n    const classes = useStyles();\r\n    const query = useQuery();\r\n    const page = query.get('page') || 1;\r\n    const searchQuery = query.get('searchQuery');\r\n  \r\n    const [currentId, setCurrentId] = useState(0); //sets the state of current ID to be null if no ID is selected\r\n    const dispatch = useDispatch();  //hook used to dipatch actions\r\n  \r\n    const [search, setSearch] = useState(''); //setting an empty string as the default value for the search bar\r\n    const [tags, setTags] = useState([]);  //setting it to an empty array to account for multiple tags\r\n    const { stocks } = useSelector((state) => state.stocks); //initialized as a hook\r\n\r\n\r\n    const history = useHistory();\r\n\r\n    //function for searching POST by ticker and name\r\n    const searchPost = () => {\r\n        if (search.trim() || tags) {\r\n            dispatch(getPostsBySearch({ search, tags: tags.join(',') }));\r\n            history.push(`/posts/search?searchQuery=${search || 'none'}&tags=${tags.join(',')}`); //changes the permalink to the account for the query and client-side routing\r\n        } else {\r\n            history.push('/'); //redirects to base, nothing was searched\r\n        }\r\n    };\r\n    //runs function for searching POST by ticker and name upon pressing of Enter key\r\n    const handleKeyPress = (e) => {\r\n        if(e.keyCode === 13) { //key code 13 means the Enter key on a keyboard\r\n            //search for post\r\n            searchPost();\r\n        }\r\n    }\r\n\r\n    const handleAddTag = (tag) => setTags([ ...tags, tag]);\r\n    const handleDeleteTag = (tagToDelete) => setTags(tags.filter( (tag) => tag !== tagToDelete ));\r\n\r\n    return (\r\n        \r\n    <Grow in>\r\n        <Container maxWidth='xl'>\r\n            <Stocks />\r\n            <Grid \r\n                container \r\n                justify='space-between' \r\n                alignItems='stretch' \r\n                spacing={3} \r\n                className={classes.gridContainer} \r\n            >\r\n            <Grid item xs={12} sm={6} md={9}>\r\n                {/* <Posts setCurrentId={setCurrentId}/> */}\r\n            </Grid>\r\n\r\n            {/* THIS IS FOR THE SEARCH POSTS BY NAME AND TICKER ORIGINAL FUNCTIONALITY ---------\r\n                <Grid item xs={12} sm={6} md={3}>\r\n                <AppBar className={classes.appBarSearch} position='static' color='inherit' > \r\n                    <TextField \r\n                        name='search' \r\n                        variant='outlined' \r\n                        label='Search for a stock'\r\n                        onKeyDown={handleKeyPress}\r\n                        fullWidth\r\n                        value={search}\r\n                        onChange={ (e) => setSearch(e.target.value) } //allows user to change value of the search\r\n                        />\r\n                    <ChipInput \r\n                        style={{margin: '15px 0'}}\r\n                        value={tags}\r\n                        onAdd={handleAddTag}\r\n                        onDelete={handleDeleteTag}\r\n                        label= 'Search stock tickers'\r\n                        variant='outlined'\r\n                    />\r\n                    <Button onClick={searchPost} className={classes.searchButton} variant='contained' color='primary'>Search</Button>\r\n                </AppBar> \r\n            */}\r\n\r\n                {/* THIS IS THE FORM TO SUBMIT AND EDIT POSTS WITH---------------------------\r\n                    <Form currentId={currentId} setCurrentId={setCurrentId}/>\r\n                        {( !searchQuery && !tags.length ) && (\r\n                        <Paper className={classes.pagination} elevation={6}>\r\n                            <Pagination page={page}/>\r\n                        </Paper>\r\n                        )} \r\n                </Grid>\r\n                */}\r\n            </Grid>\r\n        </Container>\r\n    </Grow>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(2),\r\n  },\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  googleButton: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n","import React from 'react';\r\nimport { TextField, Grid, InputAdornment, IconButton } from '@material-ui/core';\r\n\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\nconst Input = ({ name, label, handleChange, half, autoFocus, type, handleShowPassword }) => (\r\n  <Grid item xs={12} sm={half ? 6 : 12}>\r\n    <TextField\r\n      name={name}\r\n      onChange={handleChange}\r\n      variant=\"outlined\"\r\n      required\r\n      fullWidth\r\n      label={label}\r\n      autoFocus={autoFocus}\r\n      type={type}\r\n      InputProps={name === 'password' ? {\r\n        endAdornment: (\r\n          <InputAdornment position=\"end\">\r\n            <IconButton onClick={handleShowPassword}>\r\n              {type === 'password' ? <Visibility /> : <VisibilityOff />}\r\n            </IconButton>\r\n          </InputAdornment>\r\n        ),\r\n      } : null}\r\n    />\r\n  </Grid>\r\n);\r\n\r\nexport default Input;","import React from 'react';\r\n\r\nconst icon = () => (\r\n  <svg style={{ width: '20px', height: '20px' }} viewBox=\"0 0 24 24\">\r\n    <path\r\n      fill=\"currentColor\"\r\n      d=\"M21.35,11.1H12.18V13.83H18.69C18.36,17.64 15.19,19.27 12.19,19.27C8.36,19.27 5,16.25 5,12C5,7.9 8.2,4.73 12.2,4.73C15.29,4.73 17.1,6.7 17.1,6.7L19,4.72C19,4.72 16.56,2 12.1,2C6.42,2 2.03,6.8 2.03,12C2.03,17.05 6.16,22 12.25,22C17.6,22 21.5,18.33 21.5,12.91C21.5,11.76 21.35,11.1 21.35,11.1V11.1Z\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default icon;","import React, { useState } from 'react';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport { signin, signup } from '../../actions/auth';\r\nimport { AUTH } from '../../constants/actionTypes';\r\n\r\nimport useStyles from './styles';\r\nimport Input from './Input';\r\nimport Icon from './icon';\r\n\r\nconst initialState = { firstName: '', lastName: '', email: '', password: '', confirmPassword: ''};\r\n\r\nconst Auth = () => {\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [isSignup, setIsSignup] = useState(false); //using array destructuring to set default state to be not signed up, takes 2 params, state and callback to run in re-render\r\n    const [formData, setFormData] = useState(initialState); //setting the state for email/password fields\r\n\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    \r\n    const handleShowPassword = () => setShowPassword( (prevShowPassword) => !prevShowPassword) //this toggles the show pw on/off\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault(); //always add this to form submits, to prevent default behavior of browsers to refresh upon form submit\r\n        \r\n        if(isSignup) {\r\n            dispatch(signup( formData, history )); //we pass the form data to have in the database, and the history object so that we can navigate once something happens\r\n        } else {\r\n            dispatch(signin( formData, history )); //we pass the form data to have in the database, and the history object so that we can navigate once something happens\r\n        }\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const switchMode = () => {\r\n        (setIsSignup( (prevIsSignup) => !prevIsSignup )); //switches the state on/off from false to true like a switch\r\n        setShowPassword(false); //resets the show password when switching between signup/signin\r\n    };  \r\n\r\n    const googleSuccess = async (res) => {\r\n        //special optional chaining operator ?. is not going to throw an error if we don't have access to the res object\r\n        const result = res?.profileObj;\r\n        const token = res?.tokenId;\r\n        \r\n        try {\r\n            dispatch({type: AUTH, data: { result, token } }); //dispatching action type and payload\r\n            history.push('/'); //navigate user back to home after logging in\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        console.log(res);\r\n    };\r\n\r\n    //if sign up with google fails, return why\r\n    const googleFailure = (error) => {\r\n        console.log(error);\r\n        console.log('Google Sign In was unsuccessful. Try Again Later.')\r\n    };\r\n\r\n    return (\r\n        <Container component='main' maxWidth='xs'>\r\n            <Paper className={classes.paper} elevation={3}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography variant='h5'>{ isSignup ? 'Sign Up' : 'Sign In' }</Typography>\r\n                <form className={classes.form} onSubmit={handleSubmit}>\r\n                    <Grid container spacing={2}>\r\n                        { isSignup && (\r\n                        <>\r\n                            <Input name='firstName' label='First Name' handleChange={handleChange} autoFocus half/>\r\n                            <Input name='lastName' label='Last Name' handleChange={handleChange} half/>\r\n                        </>\r\n                        )}\r\n                        <Input name='email' label='Email Address' type='email' handleChange={handleChange} />\r\n                        <Input name='password' label='Password' type={showPassword ? 'text' : 'password'} handleShowPassword={handleShowPassword} handleChange={handleChange}/>\r\n                        { isSignup && <Input name='confirmPassword' label='Repeat Password' type='password' handleChange={handleChange}/> }\r\n                    </Grid>\r\n                    <Button type='submit' fullWidth variant='contained' color='primary' className={classes.submit}>\r\n                        { isSignup ? 'Sign Up' : 'Sign In'}\r\n                    </Button>\r\n                    <GoogleLogin \r\n                        clientId='941971253122-02s9drkrmvukt8fha77buslca1u4g40u.apps.googleusercontent.com'\r\n                        render={(renderProps) => (\r\n                            <Button className={classes.googleButton} color='primary' fullWidth onClick={renderProps.onClick} disabled={renderProps.disabled} startIcon={<Icon />} variant='contained' >\r\n                                Google Sign In\r\n                            </Button>\r\n                        )}\r\n                        onSuccess={googleSuccess}\r\n                        onFailure={googleFailure}\r\n                        cookiePolicy='single_host_origin'\r\n                    />\r\n                    <Grid container justify='flex-end'>\r\n                        <Button onClick={switchMode}>\r\n                            {isSignup ? 'Already have an account? Sign In' : 'Don\\'t have an account? Sign Up'}\r\n                        </Button>\r\n                    </Grid>\r\n                </form>\r\n            </Paper>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Auth;\r\n","import { AUTH } from '../constants/actionTypes';\r\nimport * as api from '../api/index.js'; //import everything from the actions as api\r\n\r\n//\r\nexport const signin = (formData, router) => async (dispatch) => {\r\n    try {\r\n        //log user in\r\n        const { data } = await api.signIn(formData);\r\n\r\n        dispatch({ type: AUTH, data });\r\n\r\n        router.push('/');\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n};\r\n\r\n//\r\nexport const signup = (formData, router) => async (dispatch) => {\r\n    try {\r\n        //sign user up\r\n        const { data } = await api.signUp(formData);\r\n\r\n        dispatch({ type: AUTH, data });\r\n\r\n        router.push('/');\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n};","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  media: {\r\n    borderRadius: '20px',\r\n    objectFit: 'cover',\r\n    width: '100%',\r\n    maxHeight: '600px',\r\n\r\n  },\r\n  card: {\r\n    display: 'flex',\r\n    width: '100%',\r\n    [theme.breakpoints.down('sm')]: {\r\n      flexWrap: 'wrap',\r\n      flexDirection: 'column',\r\n    },\r\n  },\r\n  section: {\r\n    borderRadius: '20px',\r\n    margin: '10px',\r\n    flex: 1,\r\n  },\r\n  imageSection: {\r\n    marginLeft: '20px',\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginLeft: 0,\r\n    },\r\n  },\r\n  recommendedPosts: {\r\n    display: 'flex',\r\n    [theme.breakpoints.down('sm')]: {\r\n      flexDirection: 'column',\r\n    },\r\n  },\r\n  loadingPaper: {\r\n    display: 'flex', justifyContent: 'center', alignItems: 'center', padding: '20px', borderRadius: '15px', height: '39vh',\r\n  },\r\n  commentsOuterContainer: {\r\n    display: 'flex', justifyContent: 'space-between',\r\n  },\r\n  commentsInnerContainer: {\r\n    height: '200px', width: '200px', overflowY: 'auto', marginRight: '30px', \r\n  }\r\n}));","import React, { useState, useRef } from 'react';\r\nimport { Typography, Button, TextField } from '@material-ui/core';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { commentPost } from '../../actions/posts';\r\nimport useStyles from './styles';\r\n\r\nconst CommentSection = ({ post }) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    \r\n    const user = JSON.parse(localStorage.getItem('profile'));\r\n    const [comments, setComments] = useState(post?.comments);\r\n    const [comment, setComment] = useState('');\r\n    const commentsRef = useRef();\r\n    \r\n    \r\n    const handleComment = async () => {\r\n        const finalComment = `${user.result.name}: ${comment}`;\r\n\r\n        const newComments = await dispatch(commentPost(finalComment, post._id));\r\n\r\n        setComments(newComments);\r\n        setComment('');\r\n\r\n        commentsRef.current.scrollIntoView({ behavior: 'smooth' });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.commentsOuterContainer}>\r\n                <div className={classes.commentsInnerContainer}>\r\n                    <Typography gutterBottom variant='h6'>Comments</Typography>\r\n                    {comments.map((comment, index) => (\r\n                        <Typography key={index} gutterBottom variant='subtitle1'>\r\n                            <strong>{comment.split(': ')[0]}</strong>\r\n                            {comment.split(':')[1]}\r\n                        </Typography>\r\n                    ))}\r\n                <div ref={commentsRef} />\r\n                </div>\r\n                {user?.result?.name && ( //the chain operator accounts for undefined scenarios, it won't throw an error for undefined\r\n                    <div style={{ width: '70%' }}>\r\n                        <Typography gutterBottom variant='subtitle1'>Leave a comment</Typography>\r\n                        <TextField \r\n                            fullWidth\r\n                            rows={4}\r\n                            variant='outlined'\r\n                            label='Comment'\r\n                            multiline\r\n                            value={comment}\r\n                            onChange={(e) => setComment(e.target.value)}\r\n                        />\r\n                        <Button \r\n                            style={{ marginTop: '10px' }} \r\n                            fullWidth \r\n                            disabled={!comment} \r\n                            variant='contained'\r\n                            color='primary'\r\n                            onClick={handleComment}\r\n                        >\r\n                            Comment\r\n                        </Button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CommentSection;","import React, { useEffect } from 'react';\r\nimport { Paper, Typography, CircularProgress, Divider } from '@material-ui/core/';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nimport CommentSection from './CommentSection';\r\nimport { getPost, getPostsBySearch } from '../../actions/posts';\r\nimport useStyles from './styles';\r\n\r\nconst Post = () => {\r\n    const { post, posts, isLoading } = useSelector((state) => state.posts);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        dispatch(getPost(id));\r\n    }, [dispatch, id]);\r\n\r\n    useEffect(() => {\r\n        if (post) {\r\n          dispatch(getPostsBySearch({ search: 'none', tags: post.tags.join(',') }));\r\n        }\r\n      }, [dispatch, post]);\r\n\r\n    if (!post) return null;\r\n\r\n    if (isLoading) {\r\n    return (\r\n        <Paper elevation={6} className={classes.loadingPaper}>\r\n            <CircularProgress size='7em' />\r\n        </Paper>\r\n    );}\r\n\r\n    const openPost = (_id) => history.push(`/posts/${_id}`);\r\n\r\n    const recommendedPosts = posts.filter(({ _id }) => _id !== post._id);\r\n\r\n    return (\r\n    <Paper style={{ padding: '20px', borderRadius: '15px' }} elevation={6}>\r\n        <div className={classes.card}>\r\n        <div className={classes.section}>\r\n            <Typography variant='h3' component='h2'>{post.title}</Typography>\r\n            <Typography gutterBottom variant='h6' color='textSecondary' component='h2'>{post.tags.map((tag) => `#${tag} `)}</Typography>\r\n            <Typography gutterBottom variant='body1' component='p'>{post.message}</Typography>\r\n            <Typography variant='h6'>Created by: {post.name}</Typography>\r\n            <Typography variant='body1'>{moment(post.createdAt).fromNow()}</Typography>\r\n            <Divider style={{ margin: '20px 0' }} />\r\n            <Typography variant='body1'><strong>Charts - coming soon!</strong></Typography>\r\n            <Divider style={{ margin: '20px 0' }} />\r\n            <Typography variant='body1'><strong>Financials - coming soon!</strong></Typography>\r\n            <Divider style={{ margin: '20px 0' }} />\r\n            <CommentSection post={post} />\r\n            <Divider style={{ margin: '20px 0' }} />\r\n        </div>\r\n        <div className={classes.imageSection}>\r\n            <img className={classes.media} src={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} alt={post.title} />\r\n        </div>\r\n        </div>\r\n        {!!recommendedPosts.length && (\r\n        <div className={classes.section}>\r\n            <Typography gutterBottom variant='h5'>You might also like:</Typography>\r\n            <Divider />\r\n            <div className={classes.recommendedPosts}>\r\n            {recommendedPosts.map(({ title, name, message, likes, selectedFile, _id }) => (\r\n                <div style={{ margin: '20px', cursor: 'pointer' }} onClick={() => openPost(_id)} key={_id}>\r\n                <Typography gutterBottom variant='h6'>{title}</Typography>\r\n                <Typography gutterBottom variant='subtitle2'>{name}</Typography>\r\n                <Typography gutterBottom variant='subtitle2'>{message}</Typography>\r\n                <Typography gutterBottom variant='subtitle1'>Likes: {likes.length}</Typography>\r\n                <img src={selectedFile} alt={post.title} width='200px' />\r\n                </div>\r\n            ))}\r\n            </div>\r\n        </div>\r\n        )}\r\n    </Paper>\r\n    );\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport { Container } from '@material-ui/core';\r\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport Home from './components/Home/Home';\r\nimport Auth from './components/Auth/Auth';\r\nimport PostDetails from './components/PostDetails/PostDetails';\r\n\r\n// import Stock from './components/Stocks/Stock/Stock';\r\nimport Stocks from './components/Stocks/Stocks';\r\n\r\nconst App = () => {\r\n  const user = JSON.parse(localStorage.getItem('profile'));\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Container maxWidth='xl'>\r\n        <Navbar />\r\n        <Switch>\r\n            {/* {component={() => <Redirect to='/posts'/> } */}\r\n          <Route path='/' exact component={Home} />\r\n          <Route path='/posts' exact component={Home} />\r\n          <Route path='/posts/search' exact component={Home} />\r\n          <Route path='/posts/:id' exact component={PostDetails} />\r\n          <Route path='/auth' exact component={ () => (!user ? <Auth /> :  <Redirect to='/posts' /> ) } />\r\n\r\n          <Route path='/stock/search' exact component={Stocks} />\r\n          \r\n        </Switch>\r\n      </Container>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'; //keeps track of the store aka the global state, allows us to access the state from anywhere inside the app\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport reducers from './reducers'\r\n\r\nimport App from './App';\r\nimport './index.css';\r\n\r\n//to set redux we first have to create store\r\nconst store = createStore( reducers, compose( applyMiddleware(thunk) ));\r\n\r\nReactDOM.render(\r\n  <Provider store={ store }>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n//import reportWebVitals from './reportWebVitals';\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}