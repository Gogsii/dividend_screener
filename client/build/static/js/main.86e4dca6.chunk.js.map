{"version":3,"sources":["constants/actionTypes.js","reducers/posts.js","reducers/auth.js","reducers/index.js","components/Navbar/styles.js","components/Navbar/Navbar.js","api/index.js","actions/posts.js","components/Posts/Post/styles.js","components/Posts/Post/Post.js","components/Posts/styles.js","components/Posts/Posts.js","components/Form/styles.js","components/Form/Form.js","components/Pagination/styles.js","components/Pagination/Pagination.jsx","components/Home/styles.js","components/Home/Home.js","components/Auth/styles.js","components/Auth/Input.js","components/Auth/icon.js","components/Auth/Auth.js","actions/auth.js","components/PostDetails/styles.js","components/PostDetails/PostDetails.jsx","App.js","index.js"],"names":["CREATE","UPDATE","DELETE","FETCH_POST","FETCH_ALL","FETCH_BY_SEARCH","LIKE","START_LOADING","END_LOADING","AUTH","LOGOUT","posts","state","isLoading","action","type","payload","data","currentPage","numberOfPages","post","map","_id","filter","authReducer","authData","localStorage","setItem","JSON","stringify","clear","combineReducers","auth","makeStyles","theme","appBar","borderRadius","margin","display","flexDirection","justifyContent","alignItems","padding","breakpoints","down","heading","color","palette","primary","main","textDecoration","fontSize","fontWeight","image","marginLeft","marginTop","toolbar","width","profile","logout","userName","textAlign","brandContainer","purple","getContrastText","deepPurple","backgroundColor","Navbar","classes","useStyles","dispatch","useDispatch","history","useHistory","location","useLocation","useState","parse","getItem","user","setUser","useEffect","token","decode","exp","Date","getTime","AppBar","className","position","to","Typography","component","Link","variant","align","Toolbar","Avatar","alt","result","name","src","imageUrl","charAt","Button","onClick","actionType","push","API","axios","create","baseURL","interceptors","request","use","req","headers","authorization","fetchPost","id","get","fetchPosts","page","fetchPostsBySearch","searchQuery","search","tags","likePost","patch","updatePost","updatedPost","deletePost","delete","signIn","formData","signUp","getPostsBySearch","a","api","console","log","message","createPost","newPost","media","height","paddingTop","backgroundBlendMode","border","fullHeightCard","card","overlay","top","left","overlay2","right","grid","details","title","cardActions","cardAction","Post","setCurrentId","Likes","likes","length","find","like","googleId","Card","raised","elevation","ButtonBase","e","stopPropagation","CardMedia","selectedFile","moment","createdAt","fromNow","creator","style","size","tag","gutterBottom","CardContent","split","splice","join","CardActions","disabled","mainContainer","smMargin","spacing","Posts","useSelector","CircularProgress","Grid","container","item","xs","sm","md","lg","root","paper","form","flexWrap","fileInput","buttonSubmit","marginBottom","Form","currentId","postData","setPostData","handleSubmit","preventDefault","Paper","autoComplete","noValidate","onSubmit","TextField","label","fullWidth","value","onChange","target","onAdd","handleAddTag","onDelete","tagToDelete","multiple","onDone","base64","ul","Paginate","getPosts","Pagination","count","Number","renderItem","PaginationItem","appBarSearch","pagination","gridContainer","Home","query","URLSearchParams","setSearch","setTags","searchPost","trim","Grow","in","Container","maxWidth","justify","onKeyDown","keyCode","searchButton","avatar","secondary","submit","googleButton","Input","handleChange","half","autoFocus","handleShowPassword","required","InputProps","endAdornment","InputAdornment","IconButton","icon","viewBox","fill","d","initialState","firstName","lastName","email","password","confirmPassword","Auth","showPassword","setShowPassword","isSignup","setIsSignup","setFormData","googleSuccess","res","profileObj","tokenId","error","router","signup","signin","prevShowPassword","clientId","render","renderProps","startIcon","onSuccess","onFailure","cookiePolicy","prevIsSignup","objectFit","maxHeight","section","flex","imageSection","recommendedPosts","loadingPaper","useParams","getPost","Divider","cursor","openPost","App","path","exact","PostDetails","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86e4dca6.chunk.js","sourcesContent":["export const CREATE = 'CREATE';\r\nexport const UPDATE = 'UPDATE';\r\nexport const DELETE = 'DELETE';\r\n\r\nexport const FETCH_POST = 'FETCH_POST';\r\nexport const FETCH_ALL = 'FETCH_ALL';\r\nexport const FETCH_BY_SEARCH = 'FETCH_BY_SEARCH';\r\n\r\nexport const LIKE = 'LIKE';\r\nexport const START_LOADING = 'START_LOADING';\r\nexport const END_LOADING =  'END_LOADING';\r\n\r\nexport const AUTH = 'AUTH';\r\nexport const LOGOUT = 'LOGOUT';","/*a reducer is a function that accepts the state and the action\r\n//based on the action type it does some logic\r\n//in reducers the state always must be initialized to something\r\n*/\r\n\r\nimport { FETCH_POST, FETCH_ALL, FETCH_BY_SEARCH, START_LOADING, END_LOADING, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\r\n\r\nconst posts = (state = { isLoading: true, posts: [] }, action) => {\r\n    switch(action.type) {\r\n        case START_LOADING:\r\n            return { ...state, isLoading: true };\r\n            case END_LOADING:\r\n            return { ...state, isLoading: false };\r\n        case FETCH_ALL:\r\n            return {\r\n                ...state, //always spread the state when working with objects\r\n                posts: action.payload.data,\r\n                currentPage: action.payload.currentPage,\r\n                numberOfPages: action.payload.numberOfPages,\r\n            };\r\n        case FETCH_POST:\r\n            return { ...state, post: action.payload };\r\n        case FETCH_BY_SEARCH:\r\n            return { ...state, posts: action.payload };\r\n        case LIKE:\r\n            return { ...state, posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post)) };\r\n        case CREATE:\r\n            return { ...state, posts: [...state.posts, action.payload] };\r\n        case UPDATE:\r\n            return { ...state, posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post)) };\r\n        case DELETE:\r\n            return { ...state, posts: state.posts.filter((post) => post._id !== action.payload) };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default posts;","import { AUTH, LOGOUT } from '../constants/actionTypes';\r\n\r\nconst authReducer = (state = { authData: null }, action) => {\r\n    switch (action.type) {\r\n        case AUTH: \r\n            localStorage.setItem('profile', JSON.stringify( {...action?.data } )); //saving user credentials to local storage\r\n            return { ...state, authData: action?.data };\r\n        case LOGOUT:\r\n            localStorage.clear();\r\n            return { ...state, authData: null };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;","import { combineReducers } from \"redux\";\r\nimport posts from './posts';\r\nimport auth from \"./auth\";\r\n\r\n\r\nexport default combineReducers({ posts, auth });","import { makeStyles } from '@material-ui/core/styles';\r\nimport { deepPurple } from '@material-ui/core/colors';\r\n\r\nexport default makeStyles((theme) => ({\r\n  appBar: {\r\n    borderRadius: 15,\r\n    margin: '30px 0',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: '10px 50px',\r\n    [theme.breakpoints.down('sm')]: {\r\n      flexDirection: 'column',\r\n    },\r\n  },\r\n  heading: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    fontSize: '2em',\r\n    fontWeight: 300,\r\n  },\r\n  image: {\r\n    marginLeft: '10px',\r\n    marginTop: '5px',\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    width: '400px',\r\n    [theme.breakpoints.down('sm')]: {\r\n      width: 'auto',\r\n    },\r\n  },\r\n  profile: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    width: '400px',\r\n    alignItems: 'center',\r\n    [theme.breakpoints.down('sm')]: {\r\n      width: 'auto',\r\n      marginTop: 20,\r\n      justifyContent: 'center',\r\n    },\r\n  },\r\n  logout: {\r\n    marginLeft: '20px',\r\n  },\r\n  userName: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    textAlign: 'center',\r\n  },\r\n  brandContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  purple: {\r\n    color: theme.palette.getContrastText(deepPurple[500]),\r\n    backgroundColor: deepPurple[500],\r\n  },\r\n}));","import React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { AppBar, Avatar, Button, Toolbar, Typography } from '@material-ui/core';\r\nimport { useDispatch } from 'react-redux';\r\nimport decode from 'jwt-decode';\r\n\r\n//import dividends_logo from '../../images/dividends_logo.jpg';\r\n//import dividends_text from '../../images/dividends_text.jpg';\r\n\r\n//import authReducer from '../../reducers/auth';\r\nimport * as actionType from '../../constants/actionTypes';\r\nimport useStyles from './styles';\r\n\r\nconst Navbar = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile'))); //here we attempt to fetch the user from local storage and set it as the current state\r\n    \r\n    const logout = () => {\r\n        dispatch({ type: actionType.LOGOUT });\r\n        setUser(null);\r\n\r\n        return history.push('/auth');\r\n    };\r\n\r\n    //using useEffect to help navigate automatically instead of manually\r\n    useEffect((logout, user) => {\r\n        const token = user?.token;\r\n        \r\n        if (token) {\r\n            const decodedToken = decode(token);\r\n        \r\n            if (decodedToken.exp * 1000 < new Date().getTime()) logout();\r\n          }\r\n        \r\n        setUser(JSON.parse(localStorage.getItem('profile')));\r\n    }, [location]); //location here refers to url changing from /auth to just '/'\r\n\r\n    return(\r\n    <AppBar className={ classes.appBar } position='static' color='inherit'>\r\n        <Link to='/' className={classes.brandContainer}>\r\n            <Typography component={Link} to='/' className={ classes.heading } variant='h2' align='center'>Dividend Stock Screener</Typography>\r\n           {/* <img src={ dividends_text } alt='icon' height='45px' /> */}\r\n           {/* <img className={ classes.image } src={ dividends_logo } alt='icon' height='40px' /> */}\r\n        </Link>\r\n        <Toolbar className={classes.toolbar}>\r\n            {user ? (\r\n                <div className={classes.profile}>\r\n                    <Avatar className={classes.purple} alt={user.result.name} src={user.result.imageUrl}>{user.result.name.charAt(0)}</Avatar>\r\n                    <Typography className={classes.userName} variant='h6'>{user.result.name}</Typography>\r\n                    <Button variant='contained' className={classes.logout} onClick={logout}>Logout</Button>\r\n                </div>\r\n            ) : (\r\n                <Button component={Link} to='/auth' variant='contained' color='primary'>Log In</Button>\r\n            )}\r\n        </Toolbar>\r\n\r\n    </AppBar>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","import axios from 'axios';\r\n\r\nconst API = axios.create({ baseURL: 'https://dividend-screener.herokuapp.com' });\r\n\r\n//adding something specific to each one of our requests, sending the token to the backend middleware for authentication\r\n//with this our backend can get access to the specific header and decode the data, we're sending the token to the backend to verify that we are actually logged in\r\nAPI.interceptors.request.use((req) => {\r\n    if(localStorage.getItem('profile')) { //this is where the token is stored, in the profile\r\n        req.headers.authorization = `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`;\r\n    }\r\n    return req; //must return the initial request so that we are able to return all the subsequent requests below\r\n});\r\n\r\n//const url = 'http://localhost:3001/posts'; //this is when testing on home comp\r\n//const url = 'https://dividend-screener.herokuapp.com/posts';\r\n\r\n//very important to remember to export these\r\n//this is the point at which we communicate with the backend\r\nexport const fetchPost = (id) => API.get(`/posts/${id}`);\r\nexport const fetchPosts = (page) => API.get(`/posts?page=${page}`); //passing the data to the backend just so we know which page we're currently on\r\nexport const fetchPostsBySearch = (searchQuery) => API.get(`/posts/search?searchQuery=${searchQuery.search || 'none' }&tags=${searchQuery.tags}`); //with this, we are sending all of the search info to the search endpoint\r\nexport const createPost = (newPost) => API.post('/posts', newPost); \r\nexport const likePost = (id) => API.patch(`/posts/${id}/likePost`); //to implement abiilty to like post only once we need to implement accounts (full auth system registration login, accounts etc)\r\nexport const updatePost = (id, updatedPost) => API.patch(`/posts/${id}`, updatedPost); //we now have the defined url, but also passing in the id to update\r\nexport const deletePost = (id) => API.delete(`/posts/${id}`); //we now have the defined url, but also passing in the id to update\r\n\r\nexport const signIn = (formData) => API.post('/user/signin', formData);\r\nexport const signUp = (formData) => API.post('/user/signup', formData);","// these are the actions dispatched in App.js with\r\n// useEffect( () => { dispatch() }, [dispatch] );\r\n// by themselves they don't do much, you have to go into the reducers and add the logic for them\r\n\r\nimport { FETCH_POST, FETCH_ALL, FETCH_BY_SEARCH, START_LOADING, END_LOADING, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\r\nimport * as api from '../api'; //import everything from the actions as api\r\n\r\n//GET SINGLE POST ACTION\r\nexport const getPost = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: START_LOADING });\r\n        const { data } = await api.fetchPost(id); //this is where we're receiving the data from the backend\r\n            \r\n        dispatch({ type: FETCH_POST, payload: data }); //this is where we're sending the payload to the reducers\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n};\r\n\r\n//GET ALL POSTS ACTION \r\nexport const getPosts = (page) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: START_LOADING });\r\n        const { data: { data, currentPage, numberOfPages } } = await api.fetchPosts(page);\r\n        \r\n        dispatch({ type: FETCH_ALL, payload: { data, currentPage, numberOfPages } });\r\n        dispatch({ type: END_LOADING });\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n};\r\n\r\n//GET POST BY SEARCHING\r\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: START_LOADING });\r\n\r\n        //have to destructure the data twice\r\n        const { data: { data } } = await api.fetchPostsBySearch(searchQuery); // first time because we're making an axios request, and the second because we put it in a new object that has the data property\r\n\r\n        dispatch({ type: FETCH_BY_SEARCH, payload: data });\r\n        dispatch({ type: END_LOADING });\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n};\r\n\r\n//CREATE POST ACTION\r\nexport const createPost = (post, history) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: START_LOADING });\r\n        const { data } = await api.createPost(post);\r\n        \r\n        dispatch({ type: CREATE, payload: data });\r\n\r\n        history.push(`/posts/${data._id}`);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\n//UPDATE POST ACTION\r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.updatePost(id, post); //this is returning the updated post as a response, we then destructure the response and get the data\r\n        dispatch({ type: UPDATE, payload: data });\r\n    } catch (error) {\r\n        console.log(error.message); //console logging just the error instead of error.message will give you more info\r\n    }\r\n};\r\n\r\n//DELETE POST ACTION\r\nexport const deletePost = (id) => async (dispatch) => {\r\n    try {\r\n        await api.deletePost(id); //no destructuring data since we're not interested in the returned data, we're just deleting the post when recieved\r\n        dispatch({ type: DELETE, payload: id });\r\n    } catch (error) {\r\n        console.log(error); //console logging just the error instead of error.message will give you more info\r\n    }\r\n};\r\n\r\n//LIKE POST ACTION\r\n//to implement abiilty to like post only once we need to implement accounts (full auth system registration login, accounts etc)\r\nexport const likePost = (id) => async (dispatch) => {\r\n    const user = JSON.parse(localStorage.getItem('profile'));\r\n\r\n    try {\r\n        const { data } = await api.likePost(id, user?.token); //\r\n        dispatch({ type: LIKE, payload: data });\r\n    } catch (error) {\r\n        console.log(error.message); //console logging just the error instead of error.message will give you more info\r\n    }\r\n};","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    backgroundBlendMode: 'darken',\r\n  },\r\n  border: {\r\n    border: 'solid',\r\n  },\r\n  fullHeightCard: {\r\n    height: '100%',\r\n  },\r\n  card: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n    borderRadius: '15px',\r\n    height: '100%',\r\n    position: 'relative',\r\n  },\r\n  overlay: {\r\n    position: 'absolute',\r\n    top: '20px',\r\n    left: '20px',\r\n    color: 'white',\r\n  },\r\n  overlay2: {\r\n    position: 'absolute',\r\n    top: '20px',\r\n    right: '20px',\r\n    color: 'white',\r\n  },\r\n  grid: {\r\n    display: 'flex',\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    margin: '20px',\r\n  },\r\n  title: {\r\n    padding: '0 16px',\r\n  },\r\n  cardActions: {\r\n    padding: '0 16px 8px 16px',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  cardAction: {\r\n    display: 'block',\r\n    textAlign: 'initial',\r\n  },\r\n});","import React from 'react';\r\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography, ButtonBase } from '@material-ui/core/';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport ThumbUpAltOutlined from '@material-ui/icons/ThumbUpAltOutlined';\r\n//import InfoIcon from '@material-ui/icons/Info';\r\nimport { useDispatch } from 'react-redux';\r\nimport moment from 'moment';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { likePost, deletePost } from '../../../actions/posts';\r\nimport useStyles from './styles';\r\n\r\nconst Post = ({ post, setCurrentId }) => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const user = JSON.parse(localStorage.getItem('profile'));\r\n  const history = useHistory();\r\n\r\n  const Likes = () => {\r\n    if (post?.likes?.length > 0) {\r\n      return post.likes.find((like) => like === (user?.result?.googleId || user?.result?._id))\r\n        ? (\r\n          <><ThumbUpAltIcon fontSize=\"small\" />&nbsp;{post.likes.length > 2 ? `You and ${post.likes.length - 1} others` : `${post.likes.length} like${post.likes.length > 1 ? 's' : ''}` }</>\r\n        ) : (\r\n          <><ThumbUpAltOutlined fontSize=\"small\" />&nbsp;{post.likes.length} {post.likes.length === 1 ? 'Like' : 'Likes'}</>\r\n        );\r\n    }\r\n\r\n    return <><ThumbUpAltOutlined fontSize=\"small\" />&nbsp;Like</>;\r\n  };\r\n\r\n/* const openPost = (e) => history.push(`/posts/${post._id}`); */\r\n\r\n  const openPost = (e) => {\r\n    // dispatch(getPost(post._id, history));\r\n    e.stopPropagation();\r\n    history.push(`/posts/${post._id}`);\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.card} raised elevation={6}>\r\n      <ButtonBase component=\"span\" name=\"test\" className={classes.cardAction} onClick={openPost}>\r\n        <CardMedia className={classes.media} image={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} title={post.title} />\r\n        <div className={classes.overlay}>\r\n          <Typography variant=\"h6\">{post.name}</Typography>\r\n          <Typography variant=\"body2\">{moment(post.createdAt).fromNow()}</Typography>\r\n        </div>\r\n        {(user?.result?.googleId === post?.creator || user?.result?._id === post?.creator) && (\r\n          <div className={classes.overlay2} name=\"edit\">\r\n              <Button style={{ color: 'white' }} size=\"small\"\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  setCurrentId(post._id);\r\n                }}\r\n              >\r\n              <MoreHorizIcon fontSize='medium' />\r\n            </Button>\r\n          </div>\r\n        )}\r\n        <div className={classes.details}>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{post.tags.map((tag) => `#${tag} `)}</Typography>\r\n        </div>\r\n        <Typography className={classes.title} gutterBottom variant=\"h5\" component=\"h2\">{post.title}</Typography>\r\n        <CardContent>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{post.message.split(' ').splice(0, 20).join(' ')}...</Typography>\r\n        </CardContent>\r\n      </ButtonBase>\r\n\r\n      <CardActions className={classes.cardActions}>\r\n        <Button size=\"small\" color=\"primary\" disabled={!user?.result} onClick={() => dispatch(likePost(post._id))}>\r\n          <Likes />\r\n        </Button>\r\n        {(user?.result?.googleId === post?.creator || user?.result?._id === post?.creator) && (\r\n          <Button size=\"small\" color=\"secondary\" onClick={() => dispatch(deletePost(post._id))}>\r\n            <DeleteIcon fontSize=\"small\" /> &nbsp; Delete\r\n          </Button>\r\n        )}\r\n      </CardActions>\r\n\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Post;","import { makeStyles } from '@material-ui/core/styles';\r\nimport { deepPurple } from '@material-ui/core/colors';\r\n\r\nexport default makeStyles((theme) => ({\r\n  mainContainer: {\r\n    borderRadius: 15,\r\n    margin: '30px 0',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: '10px 50px',\r\n  },\r\n  heading: {\r\n    color: 'rgba(0,183,255, 1)',\r\n    textDecoration: 'none',\r\n  },\r\n  image: {\r\n    marginLeft: '15px',\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    width: '400px',\r\n  },\r\n  profile: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    width: '400px',\r\n  },\r\n  userName: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  brandContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  smMargin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  purple: {\r\n    color: theme.palette.getContrastText(deepPurple[500]),\r\n    backgroundColor: deepPurple[500],\r\n  },\r\n  [theme.breakpoints.down('sm')]: {\r\n    appBar: {\r\n      padding: '10px 20px',\r\n    },\r\n    heading: {\r\n      display: 'none',\r\n    },\r\n    userName: {\r\n      display: 'none',\r\n    },\r\n    image: {\r\n      marginLeft: '5px',\r\n    },\r\n    toolbar: {\r\n      display: 'flex',\r\n      justifyContent: 'flex-end',\r\n      width: '160px',\r\n    },\r\n  },\r\n\r\n  actionDiv: {\r\n    textAlign: 'center',\r\n  },\r\n}));","//this is the component that fetches the data from the global Redux store and presents it to the user\r\n\r\nimport React from 'react';\r\nimport { Grid, CircularProgress } from '@material-ui/core';\r\nimport { useSelector } from 'react-redux'; //lets us tap into the store\r\n\r\nimport Post from './Post/Post';\r\nimport useStyles from './styles';\r\n\r\nconst Posts = ({ setCurrentId }) => {\r\n    const { posts, isLoading } = useSelector((state) => state.posts); //initialized as a hook\r\n    const classes = useStyles();\r\n    \r\n    if (!posts.length && !isLoading) return 'No such stock found';\r\n\r\n    //because we're mapping within the 'real' posts, we can send individual value of post to each post component\r\n    return (\r\n        isLoading ? <CircularProgress /> : (\r\n            <Grid className={ classes.container } container alignItems=\"stretch\" spacing={3}>\r\n                { posts?.map((post) => (\r\n                    <Grid key={ post.id} item xs={12} sm={12} md={6} lg={3}>\r\n                        <Post post={ post } setCurrentId={ setCurrentId } /> {/*sending in post and setCurrentID as props via props drilling*/}\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n        )\r\n    )\r\n}\r\n\r\nexport default Posts;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n  },\r\n  fileInput: {\r\n    width: '97%',\r\n    margin: '10px 0',\r\n  },\r\n  buttonSubmit: {\r\n    marginBottom: 10,\r\n  },\r\n}));","//this is also where we are dealing with the update logic\r\nimport React, {useState, useEffect} from 'react';\r\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { createPost, updatePost } from '../../actions/posts';\r\n\r\nimport FileBase from 'react-file-base64';\r\nimport ChipInput from 'material-ui-chip-input';\r\n\r\nimport useStyles from './styles';\r\n\r\nconst Form = ({ currentId, setCurrentId }) => {\r\n    const [postData, setPostData] = useState({\r\n        title: '',\r\n        message: '',\r\n        tags: [],\r\n        selectedFile: ''\r\n    });\r\n    const post = useSelector((state) => (currentId ? state.posts.posts.find((message) => message._id === currentId) : null));    //we don't want to fecth data for all the posts, only for the post being updated\r\n    const dispatch = useDispatch(); //setting up dispatch from redux to be able to dispacth actions\r\n    const classes = useStyles();    //setting classes to equal material ui's styling\r\n    const history = useHistory();\r\n    const user = JSON.parse(localStorage.getItem('profile'));\r\n\r\n    const clear = () => {\r\n        setCurrentId(0);\r\n        setPostData({ title: '', message: '', tags: [], selectedFile: '' });\r\n      };\r\n\r\n    //the second parameter [post] asks when should the callback be ran, when what changes?\r\n    useEffect(() => { \r\n        if (!post?.title) clear();\r\n        if (post) setPostData(post);\r\n    }, [dispatch, post]);\r\n\r\n    const handleSubmit = async (e) => {   //Functions for form submission and clearing of form\r\n        e.preventDefault();         //prevent refreshing of browser\r\n        \r\n        if (currentId === 0) {\r\n            dispatch(createPost({ ...postData, name: user?.result?.name }, history));\r\n            clear();\r\n          } else {\r\n            dispatch(updatePost(currentId, { ...postData, name: user?.result?.name }));\r\n            clear(); //clears the form whether the user submits new stock or edits and existing\r\n          }\r\n    };\r\n\r\n    //shows the below msg if no user is logged in\r\n    if(!user?.result?.name) {\r\n        return(\r\n            <Paper className={classes.paper} elevation={6}>\r\n                <Typography variant='h6' align='center'>\r\n                    Please sign in to build your own dividend screener.\r\n                </Typography>\r\n            </Paper>\r\n        );\r\n    };\r\n\r\n    const handleAddTag = (tag) => {\r\n        setPostData({ ...postData, tags: [...postData.tags, tag] });\r\n      };\r\n    \r\n      const handleDeleteTag = (tagToDelete) => {\r\n        setPostData({ ...postData, tags: postData.tags.filter((tag) => tag !== tagToDelete) });\r\n      };\r\n      \r\n    //what the form looks like on the frontend\r\n    return (\r\n        <Paper className={classes.paper} elevation={6}>\r\n            <form autoComplete='off' noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n                <Typography variant='h6'>{currentId ? 'Editing' : 'Creating'} a Stock</Typography>\r\n                    {/*<TextField name='creator' variant='outlined' label='Creator'  fullWidth value={postData.creator}  onChange={ (e) => setPostData({ ...postData, creator: e.target.value }) }/> */}\r\n                    <TextField \r\n                        name='title' \r\n                        variant='outlined'\r\n                        label='Title' \r\n                        fullWidth\r\n                        value={postData.title}\r\n                        onChange={ (e) => setPostData({ ...postData, title: e.target.value }) }\r\n                    />\r\n                    <TextField \r\n                        name='message' \r\n                        variant='outlined'\r\n                        label='Message' \r\n                        fullWidth\r\n                        value={postData.message}\r\n                        onChange={ (e) => setPostData({ ...postData, message: e.target.value }) }\r\n                    />\r\n                    <div style={{ padding: '5px 0', width: '94%' }}>\r\n                    <ChipInput\r\n                        name=\"tags\"\r\n                        variant=\"outlined\"\r\n                        label=\"Tags\"\r\n                        fullWidth\r\n                        value={postData.tags}\r\n                        onAdd={(tag) => handleAddTag(tag)}\r\n                        onDelete={(tag) => handleDeleteTag(tag)}\r\n                    />\r\n                    </div>\r\n                <div className={classes.fileInput}>\r\n                    <FileBase\r\n                        type='file'\r\n                        multiple={false}\r\n                        onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })}\r\n                    />\r\n                </div>\r\n                <Button \r\n                    className={classes.buttonSubmit} \r\n                    variant='contained' \r\n                    color='primary' \r\n                    size='large'\r\n                    type='submit'\r\n                    fullWidth>Submit</Button>\r\n                <Button \r\n                    variant='contained' \r\n                    color='secondary' \r\n                    size='small'\r\n                    onClick={clear}\r\n                    fullWidth>Clear</Button>\r\n            </form>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default Form;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles(() => ({\r\n    ul: {\r\n        justifyContent: 'space-around',\r\n    },\r\n}));","import React, { useEffect } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Pagination, PaginationItem } from '@material-ui/lab';\r\n\r\nimport { getPosts } from '../../actions/posts';\r\nimport useStyles from './styles';\r\n\r\nconst Paginate = ({ page }) => {\r\n    const { numberOfPages } = useSelector((state) => state.posts);\r\n    const dispatch = useDispatch();\r\n\r\n    const classes = useStyles();\r\n\r\n    //we want to fetch the posts anytime that the page changes, so we use useEffect to dispatch the getPosts action on every page change if there is a page\r\n    useEffect(() => {\r\n        if(page) {\r\n            dispatch(getPosts(page)); \r\n        }\r\n    }, [dispatch, page]);\r\n\r\n    return (\r\n        <Pagination \r\n            classes={{ ul: classes.ul }}\r\n            count={numberOfPages}\r\n            page={Number(page) || 1}\r\n            variant='outlined'\r\n            color='primary'\r\n            renderItem={(item) => (\r\n                <PaginationItem {...item} component={Link} to={`/posts?page=${item.page}`} />\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\nexport default Paginate;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  appBarSearch: {\r\n    borderRadius: 4,\r\n    marginBottom: '1rem',\r\n    display: 'flex',\r\n    padding: '16px',\r\n  },\r\n  pagination: {\r\n    borderRadius: 4,\r\n    marginTop: '1rem',\r\n    padding: '16px',\r\n  },\r\n  \r\n  gridContainer: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      flexDirection: 'column-reverse',\r\n    },\r\n  },\r\n}));\r\n","import React, { useState } from 'react';\r\nimport { Container, Grow, Grid, Paper, AppBar, TextField, Button } from '@material-ui/core';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getPostsBySearch } from '../../actions/posts';\r\nimport { useHistory, useLocation } from 'react-router-dom'; //location is to know which page we are on currently and history is for re-navigation\r\nimport ChipInput from 'material-ui-chip-input'; //makes our tags pretty, especially when searching for multiple items\r\n\r\nimport Posts from '../Posts/Posts';\r\nimport Form from '../Form/Form';\r\nimport Pagination from '../Pagination/Pagination';\r\n\r\nimport useStyles from './styles';\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nconst Home = () => {\r\n    const classes = useStyles();\r\n    const query = useQuery();\r\n    const page = query.get('page') || 1;\r\n    const searchQuery = query.get('searchQuery');\r\n  \r\n    const [currentId, setCurrentId] = useState(0); //sets the state of current ID to be null if no ID is selected\r\n    const dispatch = useDispatch();  //hook used to dipatch actions\r\n  \r\n    const [search, setSearch] = useState(''); //setting an empty string as the default value for the search bar\r\n    const [tags, setTags] = useState([]);  //setting it to an empty array to account for multiple tags\r\n    const history = useHistory();\r\n\r\n    //a way to actually dispatch the action, similar to componentDidMount, componentDidUpdate and componentWillUpdate \r\n    //we're telling react to run this “effect” function after flushing changes to the DOM.\r\n    //effects are ran after every render, including the first\r\n    // useEffect(() => {\r\n    //   dispatch( getPosts() ); //dispatching the action created and exported in '/actions.posts'\r\n    // }, [currentId, dispatch] );\r\n\r\n    //function for searching stocks by ticker and name\r\n    const searchPost = () => {\r\n        if (search.trim() || tags) {\r\n            dispatch(getPostsBySearch({ search, tags: tags.join(',') }));\r\n            history.push(`/posts/search?searchQuery=${search || 'none'}&tags=${tags.join(',')}`); //changes the permalink to the account for the query and client-side routing\r\n        } else {\r\n            history.push('/'); //redirects to base, nothing was searched\r\n        }\r\n    };\r\n    //runs function for searching stocks by ticker and name upon pressing of Enter key\r\n    const handleKeyPress = (e) => {\r\n        if(e.keyCode === 13) { //key code 13 means the Enter key on a keyboard\r\n            //search for post\r\n            searchPost();\r\n        }\r\n    }\r\n\r\n    const handleAddTag = (tag) => setTags([ ...tags, tag]);\r\n\r\n    const handleDeleteTag = (tagToDelete) => setTags(tags.filter( (tag) => tag !== tagToDelete ));\r\n\r\n    return (\r\n    <Grow in>\r\n        <Container maxWidth='xl'>\r\n            <Grid \r\n                container \r\n                justify='space-between' \r\n                alignItems='stretch' \r\n                spacing={3} \r\n                className={classes.gridContainer} \r\n            >\r\n            <Grid item xs={12} sm={6} md={9}>\r\n                <Posts setCurrentId={setCurrentId}/>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={3}>\r\n                <AppBar className={classes.appBarSearch} position='static' color='inherit' > \r\n                    <TextField \r\n                        name='search' \r\n                        variant='outlined' \r\n                        label='Search for a stock'\r\n                        onKeyDown={handleKeyPress}\r\n                        fullWidth\r\n                        value={search}\r\n                        onChange={ (e) => setSearch(e.target.value) } //allows user to change value of the search\r\n                        />\r\n                    <ChipInput \r\n                        style={{margin: '15px 0'}}\r\n                        value={tags}\r\n                        onAdd={handleAddTag}\r\n                        onDelete={handleDeleteTag}\r\n                        label= 'Search stock tickers'\r\n                        variant='outlined'\r\n                    />\r\n                    <Button onClick={searchPost} className={classes.searchButton} variant='contained' color='primary'>Search</Button>\r\n                </AppBar>\r\n                <Form currentId={currentId} setCurrentId={setCurrentId}/>\r\n                {( !searchQuery && !tags.length ) && (\r\n                <Paper className={classes.pagination} elevation={6}>\r\n                    <Pagination page={page}/>\r\n                </Paper>\r\n                )}\r\n            </Grid>    \r\n            </Grid>\r\n        </Container>\r\n    </Grow>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(2),\r\n  },\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  googleButton: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n","import React from 'react';\r\nimport { TextField, Grid, InputAdornment, IconButton } from '@material-ui/core';\r\n\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\nconst Input = ({ name, label, handleChange, half, autoFocus, type, handleShowPassword }) => (\r\n  <Grid item xs={12} sm={half ? 6 : 12}>\r\n    <TextField\r\n      name={name}\r\n      onChange={handleChange}\r\n      variant=\"outlined\"\r\n      required\r\n      fullWidth\r\n      label={label}\r\n      autoFocus={autoFocus}\r\n      type={type}\r\n      InputProps={name === 'password' ? {\r\n        endAdornment: (\r\n          <InputAdornment position=\"end\">\r\n            <IconButton onClick={handleShowPassword}>\r\n              {type === 'password' ? <Visibility /> : <VisibilityOff />}\r\n            </IconButton>\r\n          </InputAdornment>\r\n        ),\r\n      } : null}\r\n    />\r\n  </Grid>\r\n);\r\n\r\nexport default Input;","import React from 'react';\r\n\r\nconst icon = () => (\r\n  <svg style={{ width: '20px', height: '20px' }} viewBox=\"0 0 24 24\">\r\n    <path\r\n      fill=\"currentColor\"\r\n      d=\"M21.35,11.1H12.18V13.83H18.69C18.36,17.64 15.19,19.27 12.19,19.27C8.36,19.27 5,16.25 5,12C5,7.9 8.2,4.73 12.2,4.73C15.29,4.73 17.1,6.7 17.1,6.7L19,4.72C19,4.72 16.56,2 12.1,2C6.42,2 2.03,6.8 2.03,12C2.03,17.05 6.16,22 12.25,22C17.6,22 21.5,18.33 21.5,12.91C21.5,11.76 21.35,11.1 21.35,11.1V11.1Z\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default icon;","import React, { useState } from 'react';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport { signin, signup } from '../../actions/auth';\r\nimport { AUTH } from '../../constants/actionTypes';\r\n\r\nimport useStyles from './styles';\r\nimport Input from './Input';\r\nimport Icon from './icon';\r\n\r\nconst initialState = { firstName: '', lastName: '', email: '', password: '', confirmPassword: ''};\r\n\r\nconst Auth = () => {\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [isSignup, setIsSignup] = useState(false); //using array destructuring to set default state to be not signed up, takes 2 params, state and callback to run in re-render\r\n    const [formData, setFormData] = useState(initialState); //setting the state for email/password fields\r\n\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    \r\n    const handleShowPassword = () => setShowPassword( (prevShowPassword) => !prevShowPassword) //this toggles the show pw on/off\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault(); //always add this to form submits, to prevent default behavior of browsers to refresh upon form submit\r\n        \r\n        if(isSignup) {\r\n            dispatch(signup( formData, history )); //we pass the form data to have in the database, and the history object so that we can navigate once something happens\r\n        } else {\r\n            dispatch(signin( formData, history )); //we pass the form data to have in the database, and the history object so that we can navigate once something happens\r\n        }\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const switchMode = () => {\r\n        (setIsSignup( (prevIsSignup) => !prevIsSignup )); //switches the state on/off from false to true like a switch\r\n        setShowPassword(false); //resets the show password when switching between signup/signin\r\n    };  \r\n\r\n    const googleSuccess = async (res) => {\r\n        //special optional chaining operator ?. is not going to throw an error if we don't have access to the res object\r\n        const result = res?.profileObj;\r\n        const token = res?.tokenId;\r\n        \r\n        try {\r\n            dispatch({type: AUTH, data: { result, token } }); //dispatching action type and payload\r\n            history.push('/'); //navigate user back to home after logging in\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        console.log(res);\r\n    };\r\n\r\n    //if sign up with google fails, return why\r\n    const googleFailure = (error) => {\r\n        console.log(error);\r\n        console.log('Google Sign In was unsuccessful. Try Again Later.')\r\n    };\r\n\r\n    return (\r\n        <Container component='main' maxWidth='xs'>\r\n            <Paper className={classes.paper} elevation={3}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography variant='h5'>{ isSignup ? 'Sign Up' : 'Sign In' }</Typography>\r\n                <form className={classes.form} onSubmit={handleSubmit}>\r\n                    <Grid container spacing={2}>\r\n                        { isSignup && (\r\n                        <>\r\n                            <Input name='firstName' label='First Name' handleChange={handleChange} autoFocus half/>\r\n                            <Input name='lastName' label='Last Name' handleChange={handleChange} half/>\r\n                        </>\r\n                        )}\r\n                        <Input name='email' label='Email Address' type='email' handleChange={handleChange} />\r\n                        <Input name='password' label='Password' type={showPassword ? 'text' : 'password'} handleShowPassword={handleShowPassword} handleChange={handleChange}/>\r\n                        { isSignup && <Input name='confirmPassword' label='Repeat Password' type='password' handleChange={handleChange}/> }\r\n                    </Grid>\r\n                    <Button type='submit' fullWidth variant='contained' color='primary' className={classes.submit}>\r\n                        { isSignup ? 'Sign Up' : 'Sign In'}\r\n                    </Button>\r\n                    <GoogleLogin \r\n                        clientId='941971253122-02s9drkrmvukt8fha77buslca1u4g40u.apps.googleusercontent.com'\r\n                        render={(renderProps) => (\r\n                            <Button className={classes.googleButton} color='primary' fullWidth onClick={renderProps.onClick} disabled={renderProps.disabled} startIcon={<Icon />} variant='contained' >\r\n                                Google Sign In\r\n                            </Button>\r\n                        )}\r\n                        onSuccess={googleSuccess}\r\n                        onFailure={googleFailure}\r\n                        cookiePolicy='single_host_origin'\r\n                    />\r\n                    <Grid container justify='flex-end'>\r\n                        <Button onClick={switchMode}>\r\n                            {isSignup ? 'Already have an account? Sign In' : 'Don\\'t have an account? Sign Up'}\r\n                        </Button>\r\n                    </Grid>\r\n                </form>\r\n            </Paper>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Auth;\r\n","import { AUTH } from '../constants/actionTypes';\r\nimport * as api from '../api/index.js'; //import everything from the actions as api\r\n\r\n//\r\nexport const signin = (formData, router) => async (dispatch) => {\r\n    try {\r\n        //log user in\r\n        const { data } = await api.signIn(formData);\r\n\r\n        dispatch({ type: AUTH, data });\r\n\r\n        router.push('/');\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n};\r\n\r\n//\r\nexport const signup = (formData, router) => async (dispatch) => {\r\n    try {\r\n        //sign user up\r\n        const { data } = await api.signUp(formData);\r\n\r\n        dispatch({ type: AUTH, data });\r\n\r\n        router.push('/');\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n};","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  media: {\r\n    borderRadius: '20px',\r\n    objectFit: 'cover',\r\n    width: '100%',\r\n    maxHeight: '600px',\r\n\r\n  },\r\n  card: {\r\n    display: 'flex',\r\n    width: '100%',\r\n    [theme.breakpoints.down('sm')]: {\r\n      flexWrap: 'wrap',\r\n      flexDirection: 'column',\r\n    },\r\n  },\r\n  section: {\r\n    borderRadius: '20px',\r\n    margin: '10px',\r\n    flex: 1,\r\n  },\r\n  imageSection: {\r\n    marginLeft: '20px',\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginLeft: 0,\r\n    },\r\n  },\r\n  recommendedPosts: {\r\n    display: 'flex',\r\n    [theme.breakpoints.down('sm')]: {\r\n      flexDirection: 'column',\r\n    },\r\n  },\r\n  loadingPaper: {\r\n    display: 'flex', justifyContent: 'center', alignItems: 'center', padding: '20px', borderRadius: '15px', height: '39vh',\r\n  },\r\n}));","import React, { useEffect } from 'react';\r\nimport { Paper, Typography, CircularProgress, Divider } from '@material-ui/core/';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport moment from 'moment';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n\r\nimport { getPost, getPostsBySearch } from '../../actions/posts';\r\nimport useStyles from './styles';\r\n\r\nconst Post = () => {\r\n    const { post, posts, isLoading } = useSelector((state) => state.posts);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        dispatch(getPost(id));\r\n    }, [dispatch, id]);\r\n\r\n    useEffect(() => {\r\n        if (post) {\r\n          dispatch(getPostsBySearch({ search: 'none', tags: post.tags.join(',') }));\r\n        }\r\n      }, [dispatch, post]);\r\n\r\n    if (!post) return null;\r\n\r\n    if (isLoading) {\r\n    return (\r\n        <Paper elevation={6} className={classes.loadingPaper}>\r\n            <CircularProgress size='7em' />\r\n        </Paper>\r\n    );}\r\n\r\n    const openPost = (_id) => history.push(`/posts/${_id}`);\r\n\r\n    const recommendedPosts = posts.filter(({ _id }) => _id !== post._id);\r\n\r\n    return (\r\n    <Paper style={{ padding: '20px', borderRadius: '15px' }} elevation={6}>\r\n        <div className={classes.card}>\r\n        <div className={classes.section}>\r\n            <Typography variant='h3' component='h2'>{post.title}</Typography>\r\n            <Typography gutterBottom variant='h6' color='textSecondary' component='h2'>{post.tags.map((tag) => `#${tag} `)}</Typography>\r\n            <Typography gutterBottom variant='body1' component='p'>{post.message}</Typography>\r\n            <Typography variant='h6'>Created by: {post.name}</Typography>\r\n            <Typography variant='body1'>{moment(post.createdAt).fromNow()}</Typography>\r\n            <Divider style={{ margin: '20px 0' }} />\r\n            <Typography variant='body1'><strong>Charts - coming soon!</strong></Typography>\r\n            <Divider style={{ margin: '20px 0' }} />\r\n            <Typography variant='body1'><strong>Financials - coming soon!</strong></Typography>\r\n            <Divider style={{ margin: '20px 0' }} />\r\n        </div>\r\n        <div className={classes.imageSection}>\r\n            <img className={classes.media} src={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} alt={post.title} />\r\n        </div>\r\n        </div>\r\n        {!!recommendedPosts.length && (\r\n        <div className={classes.section}>\r\n            <Typography gutterBottom variant='h5'>You might also like:</Typography>\r\n            <Divider />\r\n            <div className={classes.recommendedPosts}>\r\n            {recommendedPosts.map(({ title, name, message, likes, selectedFile, _id }) => (\r\n                <div style={{ margin: '20px', cursor: 'pointer' }} onClick={() => openPost(_id)} key={_id}>\r\n                <Typography gutterBottom variant='h6'>{title}</Typography>\r\n                <Typography gutterBottom variant='subtitle2'>{name}</Typography>\r\n                <Typography gutterBottom variant='subtitle2'>{message}</Typography>\r\n                <Typography gutterBottom variant='subtitle1'>Likes: {likes.length}</Typography>\r\n                <img src={selectedFile} alt={post.title} width='200px' />\r\n                </div>\r\n            ))}\r\n            </div>\r\n        </div>\r\n        )}\r\n    </Paper>\r\n    );\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport { Container } from '@material-ui/core';\r\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport Home from './components/Home/Home';\r\nimport Auth from './components/Auth/Auth';\r\nimport PostDetails from './components/PostDetails/PostDetails';\r\n\r\nconst App = () => {\r\n  const user = JSON.parse(localStorage.getItem('profile'));\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Container maxWidth='xl'>\r\n        <Navbar />\r\n        <Switch>\r\n          <Route path='/' exact component={() => <Redirect to='/posts'/> } />\r\n          <Route path='/posts' exact component={Home} />\r\n          <Route path='/posts/search' exact component={Home} />\r\n          <Route path='/posts/:id' exact component={PostDetails} />\r\n          <Route path='/auth' exact component={ () => (!user ? <Auth /> :  <Redirect to='/posts' /> ) } />\r\n        </Switch>\r\n      </Container>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'; //keeps track of the store aka the global state, allows us to access the state from anywhere inside the app\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport reducers from './reducers'\r\n\r\nimport App from './App';\r\nimport './index.css';\r\n\r\n//to set redux we first have to create store\r\nconst store = createStore( reducers, compose( applyMiddleware(thunk) ));\r\n\r\nReactDOM.render(\r\n  <Provider store={ store }>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n//import reportWebVitals from './reportWebVitals';\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}